/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'B     vI' at '31.05.16 16:46' with Gradle 2.13
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.springframework:spring-context:4.2.3.RELEASE'
    compile project(':greetingwords')
    compile project(':api')
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    
    //testCompile 'junit:junit:4.12'
}

version='1.0'

jar {
  manifest{
    attributes 'Main-Class':'org.unclediga.Talker'
  }
}


task(hello) << {
  println "Hello from my task"
}  


task fatJar(type: Jar){
  manifest{
    attributes 'Main-Class':'org.unclediga.Talker'
  }
  from {
    configurations.compile.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
  with jar
}